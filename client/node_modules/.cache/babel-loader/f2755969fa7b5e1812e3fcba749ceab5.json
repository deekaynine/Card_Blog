{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matthew\\\\Desktop\\\\memories-project\\\\client\\\\src\\\\components\\\\PostDetails\\\\PostDetails.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from \"react\";\nimport { Card, Paper, Typography, CircularProgress, Divider } from \"@material-ui/core/\";\nimport CommentSection from \"./CommentSection\";\nimport { useDispatch, useSelector } from \"react-redux\";\nimport moment from \"moment\";\nimport { useParams, useHistory } from \"react-router-dom\";\nimport { getPost, getPostsBySearch } from \"../../actions/posts\";\nimport useStyles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Post = () => {\n  _s();\n\n  const {\n    post,\n    posts,\n    isLoading\n  } = useSelector(state => state.posts);\n  const dispatch = useDispatch();\n  const history = useHistory();\n  const classes = useStyles();\n  const {\n    id\n  } = useParams();\n  useEffect(() => {\n    dispatch(getPost(id));\n  }, [id]);\n  useEffect(() => {\n    if (post) {\n      dispatch(getPostsBySearch({\n        search: \"none\",\n        tags: post === null || post === void 0 ? void 0 : post.tags.join(\",\")\n      }));\n    }\n  }, [post]);\n  if (!post) return null;\n\n  const openPost = _id => history.push(`/posts/${_id}`);\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Paper, {\n      elevation: 6,\n      className: classes.loadingPaper,\n      children: /*#__PURE__*/_jsxDEV(CircularProgress, {\n        size: \"7em\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this);\n  }\n\n  const recommendedPosts = posts.filter(({\n    _id\n  }) => _id !== post._id);\n  return /*#__PURE__*/_jsxDEV(Paper, {\n    style: {\n      padding: \"20px\",\n      borderRadius: \"15px\"\n    },\n    elevation: 6,\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.card,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.section,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h3\",\n          component: \"h2\",\n          children: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          color: \"textSecondary\",\n          component: \"h2\",\n          children: post.tags.map(tag => `#${tag} `)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"body1\",\n          component: \"p\",\n          children: post.message\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h6\",\n          children: [\"Created by: \", post.name]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: moment(post.createdAt).fromNow()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(CommentSection, {\n          post: post\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            margin: \"20px 0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.imageSection,\n        children: /*#__PURE__*/_jsxDEV(\"img\", {\n          className: classes.media,\n          src: post.selectedFile || \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\",\n          alt: post.title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), !!recommendedPosts.length && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.section,\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        gutterBottom: true,\n        variant: \"h5\",\n        children: \"You might also like:\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.recommendedPosts,\n        children: [recommendedPosts.map(({\n          title,\n          name,\n          message,\n          likes,\n          selectedFile,\n          _id\n        }) => /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.card2,\n          style: {\n            padding: \"10px\",\n            margin: \"20px\",\n            cursor: \"pointer\"\n          },\n          onClick: () => openPost(_id),\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"h6\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"subtitle2\",\n            children: name\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"subtitle2\",\n            children: message\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            gutterBottom: true,\n            variant: \"subtitle1\",\n            children: [\"Likes: \", likes.length]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, this), /*#__PURE__*/_jsxDEV(\"img\", {\n            src: selectedFile,\n            width: \"200px\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 19\n          }, this)]\n        }, _id, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 17\n        }, this)), /*#__PURE__*/_jsxDEV(Divider, {\n          style: {\n            margin: \"20px 0\"\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Post, \"tI7gvGJS3PURxKF89lAkjzOuqto=\", false, function () {\n  return [useSelector, useDispatch, useHistory, useStyles, useParams];\n});\n\n_c = Post;\nexport default Post;\n\nvar _c;\n\n$RefreshReg$(_c, \"Post\");","map":{"version":3,"sources":["C:/Users/Matthew/Desktop/memories-project/client/src/components/PostDetails/PostDetails.jsx"],"names":["React","useEffect","Card","Paper","Typography","CircularProgress","Divider","CommentSection","useDispatch","useSelector","moment","useParams","useHistory","getPost","getPostsBySearch","useStyles","Post","post","posts","isLoading","state","dispatch","history","classes","id","search","tags","join","openPost","_id","push","loadingPaper","recommendedPosts","filter","padding","borderRadius","card","section","title","map","tag","message","name","createdAt","fromNow","margin","imageSection","media","selectedFile","length","likes","card2","cursor"],"mappings":"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","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  Paper,\r\n  Typography,\r\n  CircularProgress,\r\n  Divider,\r\n} from \"@material-ui/core/\";\r\nimport CommentSection from \"./CommentSection\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport { getPost, getPostsBySearch } from \"../../actions/posts\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Post = () => {\r\n  const { post, posts, isLoading } = useSelector((state) => state.posts);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPost(id));\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      dispatch(\r\n        getPostsBySearch({ search: \"none\", tags: post?.tags.join(\",\") })\r\n      );\r\n    }\r\n  }, [post]);\r\n\r\n  if (!post) return null;\r\n\r\n  const openPost = (_id) => history.push(`/posts/${_id}`);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Paper elevation={6} className={classes.loadingPaper}>\r\n        <CircularProgress size=\"7em\" />\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\r\n\r\n  return (\r\n    <Paper style={{ padding: \"20px\", borderRadius: \"15px\" }} elevation={6}>\r\n      <div className={classes.card}>\r\n        <div className={classes.section}>\r\n          <Typography variant=\"h3\" component=\"h2\">\r\n            {post.title}\r\n          </Typography>\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h6\"\r\n            color=\"textSecondary\"\r\n            component=\"h2\"\r\n          >\r\n            {post.tags.map((tag) => `#${tag} `)}\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"body1\" component=\"p\">\r\n            {post.message}\r\n          </Typography>\r\n          <Typography variant=\"h6\">Created by: {post.name}</Typography>\r\n          <Typography variant=\"body1\">\r\n            {moment(post.createdAt).fromNow()}\r\n          </Typography>\r\n          <CommentSection post={post} />\r\n          <Divider style={{ margin: \"20px 0\" }} />\r\n        </div>\r\n        <div className={classes.imageSection}>\r\n          <img\r\n            className={classes.media}\r\n            src={\r\n              post.selectedFile ||\r\n              \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\r\n            }\r\n            alt={post.title}\r\n          />\r\n        </div>\r\n      </div>\r\n      {!!recommendedPosts.length && (\r\n        <div className={classes.section}>\r\n          <Typography gutterBottom variant=\"h5\">\r\n            You might also like:\r\n          </Typography>\r\n          <Divider />\r\n          <div className={classes.recommendedPosts}>\r\n            {recommendedPosts.map(\r\n              ({ title, name, message, likes, selectedFile, _id }) => (\r\n                <Card\r\n                  className={classes.card2}\r\n                  style={{ padding: \"10px\", margin: \"20px\", cursor: \"pointer\" }}\r\n                  onClick={() => openPost(_id)}\r\n                  key={_id}\r\n                >\r\n                  <Typography gutterBottom variant=\"h6\">\r\n                    {title}\r\n                  </Typography>\r\n                  <Typography gutterBottom variant=\"subtitle2\">\r\n                    {name}\r\n                  </Typography>\r\n                  <Typography gutterBottom variant=\"subtitle2\">\r\n                    {message}\r\n                  </Typography>\r\n                  <Typography gutterBottom variant=\"subtitle1\">\r\n                    Likes: {likes.length}\r\n                  </Typography>\r\n                  <img src={selectedFile} width=\"200px\" />\r\n                </Card>\r\n              )\r\n            )}\r\n            <Divider style={{ margin: \"20px 0\" }} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n"]},"metadata":{},"sourceType":"module"}