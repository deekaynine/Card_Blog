{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matthew\\\\Desktop\\\\memories-project\\\\client\\\\src\\\\components\\\\Posts\\\\Posts.js\",\n    _s = $RefreshSig$();\n\nimport React from \"react\";\nimport { Grid, CircularProgress } from \"@material-ui/core\";\nimport { useSelector } from \"react-redux\";\nimport Post from \"./Post/Post\";\nimport useStyles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst Posts = ({\n  setCurrentId\n}) => {\n  _s();\n\n  //useSelector allows you to access global state\n  const {\n    posts,\n    isLoading\n  } = useSelector(state => state.posts);\n  const classes = useStyles();\n  if (!posts.length && !isLoading) return \"No Posts\";\n  return isLoading ? /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 15,\n    columnNumber: 5\n  }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n    className: classes.container,\n    container: true,\n    alignItems: \"stretch\",\n    spacing: 3,\n    children: posts.map(post => /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      md: 6,\n      lg: 3,\n      children: /*#__PURE__*/_jsxDEV(Post, {\n        post: post,\n        setCurrentId: setCurrentId\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 11\n      }, this)\n    }, post._id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 9\n    }, this))\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n\n_s(Posts, \"UXnZ7vi2L7Z0aMcz62378lA7t5k=\", false, function () {\n  return [useSelector, useStyles];\n});\n\n_c = Posts;\nexport default Posts;\n\nvar _c;\n\n$RefreshReg$(_c, \"Posts\");","map":{"version":3,"sources":["C:/Users/Matthew/Desktop/memories-project/client/src/components/Posts/Posts.js"],"names":["React","Grid","CircularProgress","useSelector","Post","useStyles","Posts","setCurrentId","posts","isLoading","state","classes","length","container","map","post","_id"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,IAAT,EAAeC,gBAAf,QAAuC,mBAAvC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,IAAP,MAAiB,aAAjB;AACA,OAAOC,SAAP,MAAsB,UAAtB;;;AAEA,MAAMC,KAAK,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAsB;AAAA;;AAClC;AACA,QAAM;AAAEC,IAAAA,KAAF;AAASC,IAAAA;AAAT,MAAuBN,WAAW,CAAEO,KAAD,IAAWA,KAAK,CAACF,KAAlB,CAAxC;AACA,QAAMG,OAAO,GAAGN,SAAS,EAAzB;AAEA,MAAI,CAACG,KAAK,CAACI,MAAP,IAAiB,CAACH,SAAtB,EAAiC,OAAO,UAAP;AAEjC,SAAOA,SAAS,gBACd,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,UADc,gBAGd,QAAC,IAAD;AACE,IAAA,SAAS,EAAEE,OAAO,CAACE,SADrB;AAEE,IAAA,SAAS,MAFX;AAGE,IAAA,UAAU,EAAC,SAHb;AAIE,IAAA,OAAO,EAAE,CAJX;AAAA,cAMGL,KAAK,CAACM,GAAN,CAAWC,IAAD,iBACT,QAAC,IAAD;AAAqB,MAAA,IAAI,MAAzB;AAA0B,MAAA,EAAE,EAAE,EAA9B;AAAkC,MAAA,EAAE,EAAE,EAAtC;AAA0C,MAAA,EAAE,EAAE,CAA9C;AAAiD,MAAA,EAAE,EAAE,CAArD;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,EAAEA,IAAZ;AAAkB,QAAA,YAAY,EAAER;AAAhC;AAAA;AAAA;AAAA;AAAA;AADF,OAAWQ,IAAI,CAACC,GAAhB;AAAA;AAAA;AAAA;AAAA,YADD;AANH;AAAA;AAAA;AAAA;AAAA,UAHF;AAgBD,CAvBD;;GAAMV,K;UAEyBH,W,EACbE,S;;;KAHZC,K;AAyBN,eAAeA,KAAf","sourcesContent":["import React from \"react\";\r\nimport { Grid, CircularProgress } from \"@material-ui/core\";\r\nimport { useSelector } from \"react-redux\";\r\nimport Post from \"./Post/Post\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Posts = ({ setCurrentId }) => {\r\n  //useSelector allows you to access global state\r\n  const { posts, isLoading } = useSelector((state) => state.posts);\r\n  const classes = useStyles();\r\n\r\n  if (!posts.length && !isLoading) return \"No Posts\";\r\n\r\n  return isLoading ? (\r\n    <CircularProgress />\r\n  ) : (\r\n    <Grid\r\n      className={classes.container}\r\n      container\r\n      alignItems=\"stretch\"\r\n      spacing={3}\r\n    >\r\n      {posts.map((post) => (\r\n        <Grid key={post._id} item xs={12} sm={12} md={6} lg={3}>\r\n          <Post post={post} setCurrentId={setCurrentId} />\r\n        </Grid>\r\n      ))}\r\n    </Grid>\r\n  );\r\n};\r\n\r\nexport default Posts;\r\n"]},"metadata":{},"sourceType":"module"}