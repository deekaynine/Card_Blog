{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Matthew\\\\Desktop\\\\memories-project\\\\client\\\\src\\\\components\\\\PostDetails\\\\CommentSection.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from \"react\";\nimport { Typography, TextField, Button } from \"@material-ui/core\";\nimport { useDispatch } from \"react-redux\";\nimport { commentPost } from \"../../actions/posts\";\nimport useStyles from \"./styles\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nconst CommentSection = ({\n  post\n}) => {\n  _s();\n\n  var _user$result;\n\n  const dispatch = useDispatch();\n  const classes = useStyles();\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\n  const [comments, setComments] = useState(post === null || post === void 0 ? void 0 : post.comments);\n  const [comment, setComment] = useState(\"\");\n\n  const handleClick = () => {\n    const finalComment = `${user.result.name}: ${comment}`;\n    dispatch(commentPost(finalComment, post._id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.commenOuterContainer,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.commentInnerContainer,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          children: \"Comments\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 24,\n          columnNumber: 11\n        }, this), comments === null || comments === void 0 ? void 0 : comments.map((comment, i) => /*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"subtitle1\",\n          children: comment\n        }, i, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 13\n        }, this))]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this), (user === null || user === void 0 ? void 0 : (_user$result = user.result) === null || _user$result === void 0 ? void 0 : _user$result.name) && /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          widith: \"70%\"\n        },\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          gutterBottom: true,\n          variant: \"h6\",\n          children: \"Write a Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TextField, {\n          fullWidth: true,\n          rows: 4,\n          variant: \"outlined\",\n          label: \"Comment\",\n          multiline: true,\n          value: comment,\n          onChange: e => setComment(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: \"10px\"\n          },\n          fullWidth: true,\n          disabled: !comments.length,\n          variant: \"contained\",\n          color: \"primary\",\n          onClick: handleClick,\n          children: \"Comment\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n\n_s(CommentSection, \"9WzborvFlZ7KTCkDYHJAdf8pIcI=\", false, function () {\n  return [useDispatch, useStyles];\n});\n\n_c = CommentSection;\nexport default CommentSection;\n\nvar _c;\n\n$RefreshReg$(_c, \"CommentSection\");","map":{"version":3,"sources":["C:/Users/Matthew/Desktop/memories-project/client/src/components/PostDetails/CommentSection.jsx"],"names":["React","useState","useRef","Typography","TextField","Button","useDispatch","commentPost","useStyles","CommentSection","post","dispatch","classes","user","JSON","parse","localStorage","getItem","comments","setComments","comment","setComment","handleClick","finalComment","result","name","_id","commenOuterContainer","commentInnerContainer","map","i","widith","e","target","value","marginTop","length"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from \"react\";\r\nimport { Typography, TextField, Button } from \"@material-ui/core\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport { commentPost } from \"../../actions/posts\";\r\n\r\nimport useStyles from \"./styles\";\r\n\r\nconst CommentSection = ({ post }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\r\n  const [comments, setComments] = useState(post?.comments);\r\n  const [comment, setComment] = useState(\"\");\r\n\r\n  const handleClick = () => {\r\n    const finalComment = `${user.result.name}: ${comment}`;\r\n    dispatch(commentPost(finalComment, post._id));\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div className={classes.commenOuterContainer}>\r\n        <div className={classes.commentInnerContainer}>\r\n          <Typography gutterBottom variant=\"h6\">\r\n            Comments\r\n          </Typography>\r\n          {comments?.map((comment, i) => (\r\n            <Typography key={i} gutterBottom variant=\"subtitle1\">\r\n              {comment}\r\n            </Typography>\r\n          ))}\r\n        </div>\r\n        {user?.result?.name && (\r\n          <div style={{ widith: \"70%\" }}>\r\n            <Typography gutterBottom variant=\"h6\">\r\n              Write a Comment\r\n            </Typography>\r\n\r\n            <TextField\r\n              fullWidth\r\n              rows={4}\r\n              variant=\"outlined\"\r\n              label=\"Comment\"\r\n              multiline\r\n              value={comment}\r\n              onChange={(e) => setComment(e.target.value)}\r\n            />\r\n\r\n            <Button\r\n              style={{ marginTop: \"10px\" }}\r\n              fullWidth\r\n              disabled={!comments.length}\r\n              variant=\"contained\"\r\n              color=\"primary\"\r\n              onClick={handleClick}\r\n            >\r\n              Comment\r\n            </Button>\r\n          </div>\r\n        )}\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CommentSection;\r\n"]},"metadata":{},"sourceType":"module"}