{"ast":null,"code":"import { FETCH_ALL, CREATE, UPDATE, DELETE, LIKE, FETCH_BY_SEARCH, START_LOADING, END_LOADING } from \"../constants/actionTypes\";\nexport default ((state = {\n  isLoading: true,\n  posts: []\n}, action) => {\n  switch (action.type) {\n    case START_LOADING:\n      return { ...state,\n        isLoading: true\n      };\n\n    case END_LOADING:\n      return { ...state,\n        isLoading: false\n      };\n\n    case FETCH_ALL:\n      return { ...state,\n        posts: action.payload.data,\n        currentPage: action.payload.currentPage,\n        numberOfPages: action.payload.numberOfPages\n      };\n\n    case FETCH_BY_SEARCH:\n      return { ...state,\n        posts: action.payload\n      };\n\n    case LIKE:\n      return { ...state,\n        post: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case CREATE:\n      return { ...state,\n        post: [...state.posts, action.payload]\n      };\n\n    case UPDATE:\n      return { ...state,\n        post: state.posts.map(post => post._id === action.payload._id ? action.payload : post)\n      };\n\n    case DELETE:\n      return { ...state,\n        post: state.posts.filter(post => post._id !== action.payload)\n      };\n\n    default:\n      return state;\n  }\n});","map":{"version":3,"sources":["C:/Users/Matthew/Desktop/memories-project/client/src/reducers/posts.js"],"names":["FETCH_ALL","CREATE","UPDATE","DELETE","LIKE","FETCH_BY_SEARCH","START_LOADING","END_LOADING","state","isLoading","posts","action","type","payload","data","currentPage","numberOfPages","post","map","_id","filter"],"mappings":"AAAA,SACEA,SADF,EAEEC,MAFF,EAGEC,MAHF,EAIEC,MAJF,EAKEC,IALF,EAMEC,eANF,EAOEC,aAPF,EAQEC,WARF,QASO,0BATP;AAWA,gBAAe,CAACC,KAAK,GAAG;AAAEC,EAAAA,SAAS,EAAE,IAAb;AAAmBC,EAAAA,KAAK,EAAE;AAA1B,CAAT,EAAyCC,MAAzC,KAAoD;AACjE,UAAQA,MAAM,CAACC,IAAf;AACE,SAAKN,aAAL;AACE,aAAO,EAAE,GAAGE,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACF,SAAKF,WAAL;AACE,aAAO,EAAE,GAAGC,KAAL;AAAYC,QAAAA,SAAS,EAAE;AAAvB,OAAP;;AACF,SAAKT,SAAL;AACE,aAAO,EACL,GAAGQ,KADE;AAELE,QAAAA,KAAK,EAAEC,MAAM,CAACE,OAAP,CAAeC,IAFjB;AAGLC,QAAAA,WAAW,EAAEJ,MAAM,CAACE,OAAP,CAAeE,WAHvB;AAILC,QAAAA,aAAa,EAAEL,MAAM,CAACE,OAAP,CAAeG;AAJzB,OAAP;;AAMF,SAAKX,eAAL;AACE,aAAO,EAAE,GAAGG,KAAL;AAAYE,QAAAA,KAAK,EAAEC,MAAM,CAACE;AAA1B,OAAP;;AACF,SAAKT,IAAL;AACE,aAAO,EACL,GAAGI,KADE;AAELS,QAAAA,IAAI,EAAET,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IACpBA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDI,IAD/C;AAFD,OAAP;;AAMF,SAAKhB,MAAL;AACE,aAAO,EAAE,GAAGO,KAAL;AAAYS,QAAAA,IAAI,EAAE,CAAC,GAAGT,KAAK,CAACE,KAAV,EAAiBC,MAAM,CAACE,OAAxB;AAAlB,OAAP;;AACF,SAAKX,MAAL;AACE,aAAO,EACL,GAAGM,KADE;AAELS,QAAAA,IAAI,EAAET,KAAK,CAACE,KAAN,CAAYQ,GAAZ,CAAiBD,IAAD,IACpBA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAP,CAAeM,GAA5B,GAAkCR,MAAM,CAACE,OAAzC,GAAmDI,IAD/C;AAFD,OAAP;;AAMF,SAAKd,MAAL;AACE,aAAO,EACL,GAAGK,KADE;AAELS,QAAAA,IAAI,EAAET,KAAK,CAACE,KAAN,CAAYU,MAAZ,CAAoBH,IAAD,IAAUA,IAAI,CAACE,GAAL,KAAaR,MAAM,CAACE,OAAjD;AAFD,OAAP;;AAIF;AACE,aAAOL,KAAP;AApCJ;AAsCD,CAvCD","sourcesContent":["import {\r\n  FETCH_ALL,\r\n  CREATE,\r\n  UPDATE,\r\n  DELETE,\r\n  LIKE,\r\n  FETCH_BY_SEARCH,\r\n  START_LOADING,\r\n  END_LOADING,\r\n} from \"../constants/actionTypes\";\r\n\r\nexport default (state = { isLoading: true, posts: [] }, action) => {\r\n  switch (action.type) {\r\n    case START_LOADING:\r\n      return { ...state, isLoading: true };\r\n    case END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        posts: action.payload.data,\r\n        currentPage: action.payload.currentPage,\r\n        numberOfPages: action.payload.numberOfPages,\r\n      };\r\n    case FETCH_BY_SEARCH:\r\n      return { ...state, posts: action.payload };\r\n    case LIKE:\r\n      return {\r\n        ...state,\r\n        post: state.posts.map((post) =>\r\n          post._id === action.payload._id ? action.payload : post\r\n        ),\r\n      };\r\n    case CREATE:\r\n      return { ...state, post: [...state.posts, action.payload] };\r\n    case UPDATE:\r\n      return {\r\n        ...state,\r\n        post: state.posts.map((post) =>\r\n          post._id === action.payload._id ? action.payload : post\r\n        ),\r\n      };\r\n    case DELETE:\r\n      return {\r\n        ...state,\r\n        post: state.posts.filter((post) => post._id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n"]},"metadata":{},"sourceType":"module"}