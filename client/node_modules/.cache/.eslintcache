[{"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\index.js":"1","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\App.js":"2","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\reducers\\index.js":"3","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Navbar\\Navbar.js":"4","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Auth\\Auth.js":"5","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Home\\Home.js":"6","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\PostDetails\\PostDetails.jsx":"7","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\reducers\\posts.js":"8","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\reducers\\auth.js":"9","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Navbar\\styles.js":"10","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Auth\\Icon.js":"11","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Auth\\styles.js":"12","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Auth\\Input.js":"13","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Home\\styles.js":"14","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\constants\\actionTypes.js":"15","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\actions\\posts.js":"16","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\actions\\auth.js":"17","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Posts\\Posts.js":"18","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Form\\Form.js":"19","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\PostDetails\\styles.js":"20","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Pagination.jsx":"21","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\PostDetails\\CommentSection.jsx":"22","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Form\\styles.js":"23","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Posts\\styles.js":"24","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\styles.js":"25","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Posts\\Post\\Post.js":"26","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\api\\index.js":"27","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Posts\\Post\\styles.js":"28"},{"size":480,"mtime":1638320250506,"results":"29","hashOfConfig":"30"},{"size":1066,"mtime":1637009623271,"results":"31","hashOfConfig":"30"},{"size":154,"mtime":1635788261599,"results":"32","hashOfConfig":"30"},{"size":2595,"mtime":1637133289193,"results":"33","hashOfConfig":"30"},{"size":4898,"mtime":1636103450956,"results":"34","hashOfConfig":"30"},{"size":3375,"mtime":1636916440997,"results":"35","hashOfConfig":"30"},{"size":4048,"mtime":1637121135465,"results":"36","hashOfConfig":"30"},{"size":1630,"mtime":1637118516684,"results":"37","hashOfConfig":"30"},{"size":467,"mtime":1635793250352,"results":"38","hashOfConfig":"30"},{"size":1396,"mtime":1637010956075,"results":"39","hashOfConfig":"30"},{"size":514,"mtime":1635785814613,"results":"40","hashOfConfig":"30"},{"size":668,"mtime":1635373524877,"results":"41","hashOfConfig":"30"},{"size":1049,"mtime":1635787757632,"results":"42","hashOfConfig":"30"},{"size":427,"mtime":1636406905679,"results":"43","hashOfConfig":"30"},{"size":450,"mtime":1637108229148,"results":"44","hashOfConfig":"30"},{"size":2533,"mtime":1637132564455,"results":"45","hashOfConfig":"30"},{"size":742,"mtime":1637133883817,"results":"46","hashOfConfig":"30"},{"size":864,"mtime":1636921638792,"results":"47","hashOfConfig":"30"},{"size":3602,"mtime":1637005320468,"results":"48","hashOfConfig":"30"},{"size":1091,"mtime":1637120923162,"results":"49","hashOfConfig":"30"},{"size":956,"mtime":1636917623532,"results":"50","hashOfConfig":"30"},{"size":2185,"mtime":1637119243390,"results":"51","hashOfConfig":"30"},{"size":449,"mtime":1634366880504,"results":"52","hashOfConfig":"30"},{"size":280,"mtime":1634366912047,"results":"53","hashOfConfig":"30"},{"size":152,"mtime":1636364908277,"results":"54","hashOfConfig":"30"},{"size":4324,"mtime":1637131614927,"results":"55","hashOfConfig":"30"},{"size":1152,"mtime":1637008955317,"results":"56","hashOfConfig":"30"},{"size":1088,"mtime":1636713841652,"results":"57","hashOfConfig":"30"},{"filePath":"58","messages":"59","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1c0v6y0",{"filePath":"60","messages":"61","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"62","messages":"63","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"64","messages":"65","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"66"},{"filePath":"67","messages":"68","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"69","messages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73"},{"filePath":"74","messages":"75","errorCount":0,"fatalErrorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"76"},{"filePath":"77","messages":"78","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"79","messages":"80","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"81","messages":"82","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"83","messages":"84","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"85","messages":"86","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"87","messages":"88","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"89","messages":"90","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"91","messages":"92","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"93","messages":"94","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"95","messages":"96","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"97","messages":"98","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"99","messages":"100","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"101","messages":"102","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"103","messages":"104","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"105","messages":"106","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"107","messages":"108","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"109","messages":"110","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"111","messages":"112","errorCount":0,"fatalErrorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"113"},{"filePath":"114","messages":"115","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"116","messages":"117","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\index.js",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\App.js",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\reducers\\index.js",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Navbar\\Navbar.js",["118"],"import React, { useState, useEffect } from \"react\";\r\nimport { AppBar, Typography, Toolbar, Avatar, Button } from \"@material-ui/core\";\r\nimport { Link, useHistory, useLocation } from \"react-router-dom\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport decode from \"jwt-decode\";\r\n\r\nimport memoriesLogo from \"../../images/memoriesLogo.png\";\r\nimport memoriesText from \"../../images/memoriesText.png\";\r\nimport * as actionType from \"../../constants/actionTypes\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Navbar = () => {\r\n  const [user, setUser] = useState(JSON.parse(localStorage.getItem(\"profile\")));\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n\r\n  const logout = () => {\r\n    dispatch({ type: actionType.LOGOUT });\r\n\r\n    history.push(\"/auth\");\r\n\r\n    setUser(null);\r\n  };\r\n\r\n  useEffect(() => {\r\n    const token = user?.token;\r\n\r\n    if (token) {\r\n      const decodedToken = decode(token);\r\n\r\n      if (decodedToken.exp * 1000 < new Date().getTime()) logout();\r\n    }\r\n\r\n    setUser(JSON.parse(localStorage.getItem(\"profile\")));\r\n  }, [location]);\r\n\r\n  return (\r\n    <AppBar className={classes.appBar} position=\"static\" color=\"inherit\">\r\n      <Link to=\"/\" className={classes.brandContainer}>\r\n        <img\r\n          component={Link}\r\n          to=\"/\"\r\n          src={memoriesText}\r\n          alt=\"icon\"\r\n          height=\"45px\"\r\n        />\r\n        <img\r\n          className={classes.image}\r\n          src={memoriesLogo}\r\n          alt=\"icon\"\r\n          height=\"40px\"\r\n        />\r\n      </Link>\r\n      <Toolbar className={classes.toolbar}>\r\n        {user?.result ? (\r\n          <div className={classes.profile}>\r\n            <Avatar\r\n              className={classes.purple}\r\n              alt={user?.result.name}\r\n              src={user?.result.imageUrl}\r\n            >\r\n              {user?.result.name.charAt(0)}\r\n            </Avatar>\r\n            <Typography className={classes.userName} variant=\"h6\">\r\n              {user?.result.name}\r\n            </Typography>\r\n            <Button\r\n              variant=\"contained\"\r\n              className={classes.logout}\r\n              color=\"secondary\"\r\n              onClick={logout}\r\n            >\r\n              Logout\r\n            </Button>\r\n          </div>\r\n        ) : (\r\n          <Button\r\n            component={Link}\r\n            to=\"/auth\"\r\n            variant=\"contained\"\r\n            color=\"primary\"\r\n          >\r\n            Sign In\r\n          </Button>\r\n        )}\r\n      </Toolbar>\r\n    </AppBar>\r\n  );\r\n};\r\n\r\nexport default Navbar;\r\n","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Auth\\Auth.js",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Home\\Home.js",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\PostDetails\\PostDetails.jsx",["119","120","121"],"import React, { useEffect } from \"react\";\r\nimport {\r\n  Card,\r\n  Paper,\r\n  Typography,\r\n  CircularProgress,\r\n  Divider,\r\n} from \"@material-ui/core/\";\r\nimport CommentSection from \"./CommentSection\";\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { useParams, useHistory } from \"react-router-dom\";\r\n\r\nimport { getPost, getPostsBySearch } from \"../../actions/posts\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Post = () => {\r\n  const { post, posts, isLoading } = useSelector((state) => state.posts);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classes = useStyles();\r\n  const { id } = useParams();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPost(id));\r\n  }, [id]);\r\n\r\n  useEffect(() => {\r\n    if (post) {\r\n      dispatch(\r\n        getPostsBySearch({ search: \"none\", tags: post?.tags.join(\",\") })\r\n      );\r\n    }\r\n  }, [post]);\r\n\r\n  if (!post) return null;\r\n\r\n  const openPost = (_id) => history.push(`/posts/${_id}`);\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <Paper elevation={6} className={classes.loadingPaper}>\r\n        <CircularProgress size=\"7em\" />\r\n      </Paper>\r\n    );\r\n  }\r\n\r\n  const recommendedPosts = posts.filter(({ _id }) => _id !== post._id);\r\n\r\n  return (\r\n    <Paper style={{ padding: \"20px\", borderRadius: \"15px\" }} elevation={6}>\r\n      <div className={classes.card}>\r\n        <div className={classes.section}>\r\n          <Typography variant=\"h3\" component=\"h2\">\r\n            {post.title}\r\n          </Typography>\r\n          <Typography\r\n            gutterBottom\r\n            variant=\"h6\"\r\n            color=\"textSecondary\"\r\n            component=\"h2\"\r\n          >\r\n            {post.tags.map((tag) => `#${tag} `)}\r\n          </Typography>\r\n          <Typography gutterBottom variant=\"body1\" component=\"p\">\r\n            {post.message}\r\n          </Typography>\r\n          <Typography variant=\"h6\">Created by: {post.name}</Typography>\r\n          <Typography variant=\"body1\">\r\n            {moment(post.createdAt).fromNow()}\r\n          </Typography>\r\n          <CommentSection post={post} />\r\n          <Divider style={{ margin: \"20px 0\" }} />\r\n        </div>\r\n        <div className={classes.imageSection}>\r\n          <img\r\n            className={classes.media}\r\n            src={\r\n              post.selectedFile ||\r\n              \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\r\n            }\r\n            alt={post.title}\r\n          />\r\n        </div>\r\n      </div>\r\n      {!!recommendedPosts.length && (\r\n        <div className={classes.section}>\r\n          <Typography gutterBottom variant=\"h5\">\r\n            You might also like:\r\n          </Typography>\r\n          <Divider />\r\n          <div className={classes.recommendedPosts}>\r\n            {recommendedPosts.map(\r\n              ({ title, name, message, likes, selectedFile, _id }) => (\r\n                <Card\r\n                  className={classes.card2}\r\n                  style={{\r\n                    borderRadius: \"20px\",\r\n                    padding: \"10px\",\r\n                    margin: \"20px\",\r\n                    cursor: \"pointer\",\r\n                  }}\r\n                  onClick={() => openPost(_id)}\r\n                  key={_id}\r\n                >\r\n                  <Typography gutterBottom variant=\"h6\">\r\n                    {title}\r\n                  </Typography>\r\n                  <Typography gutterBottom variant=\"subtitle2\">\r\n                    {name}\r\n                  </Typography>\r\n                  <Typography gutterBottom variant=\"subtitle2\">\r\n                    {message}\r\n                  </Typography>\r\n                  <Typography gutterBottom variant=\"subtitle1\">\r\n                    Likes: {likes.length}\r\n                  </Typography>\r\n                  <img src={selectedFile} width=\"200px\" />\r\n                </Card>\r\n              )\r\n            )}\r\n            <Divider style={{ margin: \"20px 0\" }} />\r\n          </div>\r\n        </div>\r\n      )}\r\n    </Paper>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\reducers\\posts.js",["122"],"import {\r\n  FETCH_ALL,\r\n  CREATE,\r\n  UPDATE,\r\n  DELETE,\r\n  LIKE,\r\n  COMMENT,\r\n  FETCH_BY_SEARCH,\r\n  START_LOADING,\r\n  END_LOADING,\r\n  FETCH_POST,\r\n} from \"../constants/actionTypes\";\r\n\r\nexport default (state = { isLoading: true, posts: [] }, action) => {\r\n  switch (action.type) {\r\n    case START_LOADING:\r\n      return { ...state, isLoading: true };\r\n    case END_LOADING:\r\n      return { ...state, isLoading: false };\r\n    case FETCH_ALL:\r\n      return {\r\n        ...state,\r\n        posts: action.payload.data,\r\n        currentPage: action.payload.currentPage,\r\n        numberOfPages: action.payload.numberOfPages,\r\n      };\r\n    case FETCH_BY_SEARCH:\r\n      return { ...state, posts: action.payload };\r\n    case FETCH_POST:\r\n      return { ...state, post: action.payload };\r\n    case LIKE:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === action.payload._id ? action.payload : post\r\n        ),\r\n      };\r\n    case COMMENT:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) => {\r\n          if (post._id === action.payload._id) return action.payload;\r\n\r\n          return post;\r\n        }),\r\n      };\r\n    case CREATE:\r\n      return { ...state, posts: [...state.posts, action.payload] };\r\n    case UPDATE:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.map((post) =>\r\n          post._id === action.payload._id ? action.payload : post\r\n        ),\r\n      };\r\n    case DELETE:\r\n      return {\r\n        ...state,\r\n        posts: state.posts.filter((post) => post._id !== action.payload),\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\reducers\\auth.js",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Navbar\\styles.js",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Auth\\Icon.js",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Auth\\styles.js",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Auth\\Input.js",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Home\\styles.js",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\constants\\actionTypes.js",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\actions\\posts.js",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\actions\\auth.js",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Posts\\Posts.js",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Form\\Form.js",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\PostDetails\\styles.js",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Pagination.jsx",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\PostDetails\\CommentSection.jsx",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Form\\styles.js",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Posts\\styles.js",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\styles.js",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Posts\\Post\\Post.js",["123","124"],"import React from \"react\";\r\nimport {\r\n  Card,\r\n  CardActions,\r\n  CardContent,\r\n  CardMedia,\r\n  Button,\r\n  Typography,\r\n  ButtonBase,\r\n} from \"@material-ui/core/\";\r\nimport ThumbUpAltIcon from \"@material-ui/icons/ThumbUpAlt\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport MoreHorizIcon from \"@material-ui/icons/MoreHoriz\";\r\nimport ThumbUpAltOutlined from \"@material-ui/icons/ThumbUpAltOutlined\";\r\nimport InfoIcon from \"@material-ui/icons/Info\";\r\nimport { useDispatch } from \"react-redux\";\r\nimport moment from \"moment\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nimport { getPost, likePost, deletePost } from \"../../../actions/posts\";\r\nimport useStyles from \"./styles\";\r\n\r\nconst Post = ({ post, setCurrentId }) => {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n  const user = JSON.parse(localStorage.getItem(\"profile\"));\r\n  const history = useHistory();\r\n\r\n  const Likes = () => {\r\n    if (post?.likes?.length > 0) {\r\n      return post.likes.find(\r\n        (like) => like === (user?.result?.googleId || user?.result?._id)\r\n      ) ? (\r\n        <>\r\n          <ThumbUpAltIcon fontSize=\"small\" />\r\n          &nbsp;\r\n          {post.likes.length > 2\r\n            ? `You and ${post.likes.length - 1} others`\r\n            : `${post.likes.length} like${post.likes.length > 1 ? \"s\" : \"\"}`}\r\n        </>\r\n      ) : (\r\n        <>\r\n          <ThumbUpAltOutlined fontSize=\"small\" />\r\n          &nbsp;{post.likes.length} {post.likes.length === 1 ? \"Like\" : \"Likes\"}\r\n        </>\r\n      );\r\n    }\r\n\r\n    return (\r\n      <>\r\n        <ThumbUpAltOutlined fontSize=\"small\" />\r\n        &nbsp;Like\r\n      </>\r\n    );\r\n  };\r\n\r\n  const openPost = (e) => {\r\n    // dispatch(getPost(post._id, history));\r\n\r\n    history.push(`/posts/${post._id}`);\r\n  };\r\n\r\n  return (\r\n    <Card className={classes.card} raised elevation={6}>\r\n      <ButtonBase\r\n        component=\"span\"\r\n        name=\"test\"\r\n        className={classes.cardAction}\r\n        onClick={openPost}\r\n      >\r\n        <CardMedia\r\n          className={classes.media}\r\n          image={\r\n            post.selectedFile ||\r\n            \"https://user-images.githubusercontent.com/194400/49531010-48dad180-f8b1-11e8-8d89-1e61320e1d82.png\"\r\n          }\r\n          title={post.title}\r\n        />\r\n        <div className={classes.overlay}>\r\n          <Typography variant=\"h6\">{post.name}</Typography>\r\n          <Typography variant=\"body2\">\r\n            {moment(post.createdAt).fromNow()}\r\n          </Typography>\r\n        </div>\r\n        {(user?.result?.googleId === post?.creator ||\r\n          user?.result?._id === post?.creator) && (\r\n          <div className={classes.overlay2} name=\"edit\">\r\n            <Button\r\n              onClick={(e) => {\r\n                e.stopPropagation();\r\n                setCurrentId(post._id);\r\n              }}\r\n              style={{ color: \"white\" }}\r\n              size=\"small\"\r\n            >\r\n              <MoreHorizIcon fontSize=\"medium\" />\r\n            </Button>\r\n          </div>\r\n        )}\r\n        <div className={classes.details}>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"h2\">\r\n            {post.tags.map((tag) => `#${tag} `)}\r\n          </Typography>\r\n        </div>\r\n        <Typography\r\n          className={classes.title}\r\n          gutterBottom\r\n          variant=\"h5\"\r\n          component=\"h2\"\r\n        >\r\n          {post.title}\r\n        </Typography>\r\n        <CardContent>\r\n          <Typography variant=\"body2\" color=\"textSecondary\" component=\"p\">\r\n            {post.message.split(\" \").splice(0, 20).join(\" \")}...\r\n          </Typography>\r\n        </CardContent>\r\n      </ButtonBase>\r\n      <CardActions className={classes.cardActions}>\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          disabled={!user?.result}\r\n          onClick={() => dispatch(likePost(post._id))}\r\n        >\r\n          <Likes />\r\n        </Button>\r\n        {(user?.result?.googleId === post?.creator ||\r\n          user?.result?._id === post?.creator) && (\r\n          <Button\r\n            size=\"small\"\r\n            color=\"secondary\"\r\n            onClick={() => dispatch(deletePost(post._id))}\r\n          >\r\n            <DeleteIcon fontSize=\"small\" /> &nbsp; Delete\r\n          </Button>\r\n        )}\r\n      </CardActions>\r\n    </Card>\r\n  );\r\n};\r\n\r\nexport default Post;\r\n","C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\api\\index.js",[],"C:\\Users\\Matthew\\Desktop\\card_blog\\client\\src\\components\\Posts\\Post\\styles.js",[],{"ruleId":"125","severity":1,"message":"126","line":37,"column":6,"nodeType":"127","endLine":37,"endColumn":16,"suggestions":"128"},{"ruleId":"125","severity":1,"message":"129","line":26,"column":6,"nodeType":"127","endLine":26,"endColumn":10,"suggestions":"130"},{"ruleId":"125","severity":1,"message":"129","line":34,"column":6,"nodeType":"127","endLine":34,"endColumn":12,"suggestions":"131"},{"ruleId":"132","severity":1,"message":"133","line":118,"column":19,"nodeType":"134","endLine":118,"endColumn":59},{"ruleId":"135","severity":1,"message":"136","line":14,"column":1,"nodeType":"137","endLine":64,"endColumn":3},{"ruleId":"138","severity":1,"message":"139","line":15,"column":8,"nodeType":"140","messageId":"141","endLine":15,"endColumn":16},{"ruleId":"138","severity":1,"message":"142","line":20,"column":10,"nodeType":"140","messageId":"141","endLine":20,"endColumn":17},"react-hooks/exhaustive-deps","React Hook useEffect has missing dependencies: 'logout' and 'user?.token'. Either include them or remove the dependency array.","ArrayExpression",["143"],"React Hook useEffect has a missing dependency: 'dispatch'. Either include it or remove the dependency array.",["144"],["145"],"jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","import/no-anonymous-default-export","Assign arrow function to a variable before exporting as module default","ExportDefaultDeclaration","no-unused-vars","'InfoIcon' is defined but never used.","Identifier","unusedVar","'getPost' is defined but never used.",{"desc":"146","fix":"147"},{"desc":"148","fix":"149"},{"desc":"150","fix":"151"},"Update the dependencies array to be: [location, logout, user?.token]",{"range":"152","text":"153"},"Update the dependencies array to be: [dispatch, id]",{"range":"154","text":"155"},"Update the dependencies array to be: [dispatch, post]",{"range":"156","text":"157"},[1130,1140],"[location, logout, user?.token]",[733,737],"[dispatch, id]",[894,900],"[dispatch, post]"]